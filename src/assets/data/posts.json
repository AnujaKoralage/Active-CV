[
    {
        "thumbnail": "../../assets/posts/ere.jpg",
        "http": "https://github.com/users/AnujaKoralage/projects/1",
        "date": "06-04-2020",
        "internationalizations": [
            {
                "language": "en",
                "title": "ELECTRONIC WALLET BASED FOREX TRADING SYSTEM  ",
                "description": "Overall target is to develop a platform to invest money for poor know ledged people on rich know ledged people, then rich knowledge people can invest more money and earn more profits. Also, poor knowledge people can earn money without taking more risks. This application will able to develop a strong relationship between low level investors (trader) and high-level investors (investor). By using this application low level investor able to gather more money and earn more profits for themselves and for the money supplier (high level investor). Also, low level investor can earn more reputation based on him/her past investing activities."
            }
        ],
      "technologies": [
        "Spring Boot", "Spring Data JPA", "REST Web Services", "Spring Security", "Spring Cloud Gateway", "HTML", "CSS", "JS/JQuery", "Angular 8", "Bootstrap", "MySql", "Tomcat", "Maven", "Microservice Architecture"
      ]
    },
    {
        "thumbnail": "../../assets/posts/cxx.jpg",
        "http": "https://github.com/AnujaKoralage/WholeSalePOSWithSpringWebMvc",
        "date": "11-15-2019",
        "internationalizations": [
            {
                "language": "en",
                "title": "POINT OF PURCHASING MANAGEMENT SYSTEM FOR WHOLE SALE SUPER MARKET",
                "description": "This is a Point of Purchasing Management System for the supermarket. This system development based on layered architecture, Angular 8, and Spring Framework. I used Spring Data JPA to reduce the complexity of the data layer and used Spring Web MVC to develop backend. This application backend works as a REST API. MAVEN used as a project management tool. This project was developed under low cohesion and loose coupling."
            }
        ] ,
      "technologies": [
        "HTML", "CSS", "JS/JQuery", "Angular 8", "Bootstrap", "Spring Boot", "Spring Data JPA", "REST Web Services", "MySql", "Tomcat", "Maven", "Layered Architecture"
      ]
    },
    {
        "thumbnail": "../../assets/posts/dss.jpg",
        "http": "https://github.com/AnujaKoralage/WholeSalePOSwithSpringBOOT",
        "date": "07-10-2016",
        "internationalizations": [
            {
                "language": "en",
                "title": "SELLING POINT SYSTEM FOR WHOLE SALE SUPER MARKET",
                "description": "This is a simple point of sale system (POS) for the supermarket. This system development based on layered architecture, and Spring Framework. I used Spring Data JPA to reduce the complexity of the data layer and used Spring Boot to develop backend. This application backend works as a REST API. MAVEN used as a project management tool. This project was developed under low cohesion and loose coupling."
            }
        ],
      "technologies": [
        "HTML", "CSS", "JS/JQuery", "Ajax", "Spring Boot", "Spring Data JPA", "REST Web Services", "MySql", "Tomcat", "Maven", "Layered Architecture"
      ]
    },
    {
        "thumbnail": "../../assets/posts/dss.jpg",
        "http": "https://github.com/AnujaKoralage/WholeSalePOSWithSpringWebMvc",
        "date": "11-07-2019",
        "internationalizations": [
            {
                "language": "en",
                "title": "POINT OF SALE SYSTEM FOR WHOLE SALE SUPER MARKET",
                "description": "This is a simple point of sale system (POS) for the supermarket. This system development based on layered architecture, and Spring Framework. I used Spring Data JPA to reduce the complexity of the data layer and used Spring Web MVC to develop backend. This application backend works as a REST API. MAVEN used as a project management tool. This project was developed under low cohesion and loose coupling."
            }
        ],
      "technologies": [
        "HTML", "CSS", "JS/JQuery", "Ajax", "Spring Web MVC", "Spring Data JPA", "RESTful", "MySql", "Tomcat", "Maven", "Layered Architecture"
      ]
    },
    {
        "thumbnail": "../../assets/posts/post-06-18-2016.jpg",
        "http": "https://github.com/AnujaKoralage/WholeSaleMavenSpringHibernate",
        "date": "10-18-2019",
        "internationalizations": [
            {
                "language": "en",
                "title": "SELLING POINT SYSTEM FOR WHOLE SALE SUPER MARKET",
                "description": "This is a simple point of sale system (POS) for the supermarket. This system development based on layered architecture, and Spring Framework. I used Hibernate to reduce the complexity of the data layer and used Spring to develop backend. MAVEN used as a project management tool. This project was developed under low cohesion and loose coupling."
            }
        ],
      "technologies": [
        "JavaFX", "Spring Core", "Hibernate", "MySql", "Maven", "Layered Architecture", "Design patterns", "JavaFx", "Jasper"
      ]
    },
    {
        "thumbnail": "../../assets/posts/spring.jpg",
        "http": "https://github.com/AnujaKoralage/WholeSaleMavenSpringHibernate",
        "date": "09-04-2019",
        "internationalizations": [
            {
                "language": "en",
                "title": "SALES OUTLET SYSTEM FOR WHOLE SALE SUPER MARKET",
                "description": "This is a Sales Outlet System (SOS) for the supermarket. This system development based on layered architecture, and Spring Framework. I used Hibernate to reduce the complexity of the data layer and used Spring to develop backend. MAVEN used as a project management tool. This project was developed under low cohesion and loose coupling."
            }
        ],
      "technologies": [
        "JavaFX", "Spring Core", "Hibernate", "MySql", "Maven", "Layered Architecture", "Design patterns", "JavaFx", "Jasper"
      ]
    },
    {
        "thumbnail": "../../assets/posts/slickpos-ipad.png",
        "http": "https://github.com/AnujaKoralage/WholeSaleMavenSpringJPA",
        "date": "08-28-2019",
        "internationalizations": [
            {
                "language": "en",
                "title": "RETAIL OUTLET SYSTEM FOR BURGER SHOP",
                "description": "This is a Retail Outlet System for the supermarket. This system development based on layered architecture, and Spring Framework. I used the Java Persistence API to reduce the complexity of the data layer and used Spring to develop backend. MAVEN used as a project management tool. This project was developed under low cohesion and loose coupling."
            }
        ],
      "technologies": [
        "JPA", "Spring Core", "JDBC", "MySql", "Maven", "Layered Architecture", "Design patterns", "JavaFx"
      ]
    },
    {
        "thumbnail": "../../assets/posts/liq.jpg",
        "http": "https://github.com/AnujaKoralage/LiquorStockManagment",
        "date": "07-14-2019",
        "internationalizations": [
            {
                "language": "en",
                "title": "POINT OF SALE SYSTEM FOR LIQUOR STOCK MANAGEMENT",
                "description": "This is a simple point of sale system (POS) for Liquor Stock Management. This system development based on layered architecture, and various design patterns. I used DAO design pattern for the data layer. MAVEN used as a project management tool. This project was developed under low cohesion and loose coupling. Front end side developed using Java-FX."
            }
        ],
      "technologies": [
        "JAVA-FX", "Jasper Reports", "JDBC", "MySql", "Maven", "Layered Architecture", "Design patterns"
      ]
    },
    {
        "thumbnail": "../../assets/posts/concept.gif",
        "http": "https://github.com/AnujaKoralage/SimpleConnectionPool",
        "date": "06-21-2019",
        "internationalizations": [
            {
                "language": "en",
                "title": "Simple Connection Pool",
                "description": "A pool is a logical holder of many instances of an object. Because pools are kept completely initialized and ready to use, you effectively can grab an object from one, use the object to get your work/task executed, and then return the object to the pool. Two of the most common objects that are held in pools are database connections and threads."
            }
        ],
      "technologies": [
        "Concurrency Programming", "Java", "JDBC"
      ]
    }
]
